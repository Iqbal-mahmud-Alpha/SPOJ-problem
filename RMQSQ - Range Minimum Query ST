#include <bits/stdc++.h>
using namespace std;
#define faster  ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff first
#define ss second
#define pb push_back
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a * (b / gcd(a, b)))
#define all(a) a.begin(), a.end()
#define INF 1000000000
#define mod 1000000007
#define num 1000000
/**----data type----*/
typedef long long int ll;
typedef unsigned long long int llu;

int arr[num];
int tree[num];
void builtree(int node,int ss,int ee)
{
    if(ss==ee)
    {
        tree[node]=arr[ss];
        return;
    }
    int left=node*2;
    int right=node*2+1;
    int mid=(ss+ee)/2;
    builtree(left,ss,mid);
    builtree(right,mid+1,ee);
    tree[node]=min(tree[left],tree[right]);
}
int query(int node,int b,int e,int i,int j)
{
    if(i>e or j<b)
    {
        return INF;
    }
    if(b>=i and e<=j)
    {
        return tree[node];
    }
    int left=node*2;
    int right=node*2+1;
    int mid=(b+e)/2;
    int p1=query(left,b,mid,i,j);
    int p2=query(right,mid+1,e,i,j);
    return min(p1,p2);
}
void Print(int n)
{
    for(int i=0; i<n*3; i++)
    {
        cout<<tree[i]<<' ';
    }
    cout<<endl;
}
int main()
{
    int t,n,q,l,r;

    cin>>n;
    for(int i=1; i<=n; i++)
    {
        cin>>arr[i];
    }
    builtree(1,1,n);
    //Print(n);
    cin>>q;
    while(q--)
    {
        cin>>l>>r;
        cout<<query(1,1,n,l+1,r+1)<<endl;
    }
}
