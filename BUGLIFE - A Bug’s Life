#include <bits/stdc++.h>
using namespace std;
#define faster            ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff                first
#define ss                second
#define pb                push_back
#define p                pair<ll,ll>
#define mem(a,b)          memset(a,b,sizeof(a))
#define gcd(a, b)         __gcd(a, b)
#define lcm(a, b)         (a * (b / gcd(a, b)))
#define all(a)            a.begin(), a.end()
#define setbit(n)         __builtin_popcount(n);
#define totalbit(n)       log2(n)+1
#define lens(s)           s.size()
#define lena(a)            sizeof(a)/sizeof(a[0])
#define posation(x)       cout<<fixed<<setprecision(x)
#define pi                3.141592653589793
#define INF               1000000000
#define mod               1000000007
#define num               1000006

/**----data type----*/
typedef long long int ll;
typedef unsigned long long int llu;

vector<int>v[num];
int vis[num],colour[num];
bool dfs(int node,int col)
{
    vis[node]=1;
    colour[node]=col;
    for(int child:v[node])
    {
        if(vis[child]==0)
        {
            if(dfs(child,col^1)==false)
            {
                return false;
            }
        }
        else if(colour[child]==colour[node])
        {
            return false;
        }
    }
    return true;
}
int main()
{
    int tc,n,e,x,y,cnt=1;
    cin>>tc;
    while(tc--)
    {
        cin>>n>>e;
        mem(colour,0);
        mem(vis,0);
        for(int i=0; i<=n; i++)v[i].clear();
        for(int i=1; i<=e; i++)
        {
            cin>>x>>y;
            v[x].pb(y);
            v[y].pb(x);
        }
        bool b=true;
        for(int i=1; i<=n; i++)
        {
            if(vis[i]==0)
            {
                b=dfs(i,1);
                if(b==false)break;
            }
        }
        cout<<"Scenario #"<<cnt<<":"<<endl;
        if(!b)cout<<"Suspicious bugs found!"<<endl;
        else cout<<"No suspicious bugs found!"<<endl;
        cnt++;
    }
}


