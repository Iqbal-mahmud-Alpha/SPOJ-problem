#include<bits/stdc++.h>
using namespace std;
#define num 32000
typedef long long ll;
vector<int>v;
bool a[num];
void sive()
{
    memset(a,true,sizeof(a));
    a[0]=a[1]=false;
    for(int i=4; i<num; i+=2)a[i]=false;
    for(int i=3; i<sqrt(num); i+=2)
    {
        if(a[i])
        {
            for(int j=i*i; j<num; j+=i*2)
            {
                a[j]=false;
            }
        }
    }
    for(int i=0; i<num; i++)
    {
        if(a[i])v.push_back(i);
    }
}
void segment_sive(ll b,ll c)
{
    ll len=c-b+1;
    bool isprime[len];
    for(int i=0; i<len; i++)isprime[i]=true;
    if(b==1)isprime[0]=false;
    for(int i=0; v[i]*v[i]<=c; i++)
    {
        ll currentprime=v[i];
        ll base=(b/currentprime)*currentprime;
        if(base<b)base+=currentprime;
        for(ll j=base; j<=c; j+=currentprime)
        {
            isprime[j-b]=false;
        }
        if(base==currentprime)isprime[base-b]=true;
    }
 
    for(int i=0; i<len; i++)
    {
        if(isprime[i])cout<<i+b<<endl;
    }
}
int main()
{
    sive();
    ll tc;
    cin>>tc;
    while(tc--)
    {
        ll l,r;
        cin>>l>>r;
        segment_sive(l,r);
        cout<<endl;
    }
 
}
