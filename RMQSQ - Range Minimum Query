#include<bits/stdc++.h>
using namespace std;
#define faster         ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define mem(a,b)       memset(a,b,sizeof(a))
#define ff first
#define all(x)  (x.begin(),x.end())
#define ss second
#define pr pair<ll,ll>
#define pb push_back
#define gcd(a,b)    __gcd(a,b)
#define lcm(a,b)    (a*(b/gcd(a,b)))
#define mod  1000000007
#define num 1000000

/**----data type----*/
typedef long long int ll;
typedef unsigned long long int llu;

int lookup[num][20];
int arr[num];
void buildSparseTable(int n)
{
    for (int i = 0; i < n; i++)
        lookup[i][0] = arr[i];
    for (int j = 1; (1 << j) <= n; j++)
    {
        for (int i = 0; (i + (1 << j) - 1) < n; i++)
        {
            if (lookup[i][j - 1]<lookup[i + (1 << (j - 1))][j - 1])
                lookup[i][j] = lookup[i][j - 1];
            else
                lookup[i][j]=lookup[i + (1 << (j - 1))][j - 1];
        }
    }
}
int query(int L, int R)
{

    int j = (int)log2(R - L + 1);


    if (lookup[L][j] <= lookup[R - (1 << j) + 1][j])
        return lookup[L][j];

    else
        return lookup[R - (1 << j) + 1][j];
}
int main()
{
    int N,l,r;
    cin>>N;
    for(int i=0; i<N; i++)
    {
        cin>>arr[i];
    }
    buildSparseTable(N);
    int q;
    cin>>q;
    while(q--)
    {
        cin>>l>>r;
        cout<<query(l,r)<<endl;
    }
}
